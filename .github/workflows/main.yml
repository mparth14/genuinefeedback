name: Genuine Feedback CI/CD

on:
  push:
    branches:
      - main
  
  pull_request:
    branches:
      - main
  
jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      #Step 1: checkout code
      - name: 'Clone repository'
        uses: actions/checkout@v3

      #Step 2: setup node env
      - name: 'setup node env'
        uses: actions/checkout@v3
        with:
          node-version: '18'
      
      #Step 3: install dependencies and packages
      - name: 'install dep'
        run: npm ci
      
      #Step 5: Build project
      - name: 'build'
        run: npm run build

  Lint:
    runs-on: ubuntu-latest

    steps:
    #Step 1: run linting
      - name: 'run linting'
        run: npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
    #Step 1: Run unit tests
      - name: 'tests'
        run: npm run test
    
  docker:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3
      
      #Step 2: Sign in docker hub
      - name: Sign in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/genuinefeedback:${{ github.sha }} .

      # Step 4: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/genuinefeedback:${{ github.sha }}

      # Step 5: Tag the latest image
      - name: Tag Docker image as latest
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/genuinefeedback:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/genuinefeedback:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/genuinefeedback:latest
      
      
